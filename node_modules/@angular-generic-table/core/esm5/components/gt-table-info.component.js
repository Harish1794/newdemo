/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, ChangeDetectorRef, Input } from '@angular/core';
import { GenericTableComponent } from './generic-table.component';
var GtTableInfoComponent = /** @class */ (function () {
    function GtTableInfoComponent(_changeDetectionRef) {
        this._changeDetectionRef = _changeDetectionRef;
    }
    /**
     * @return {?}
     */
    GtTableInfoComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this._changeDetectionRef.detectChanges();
    };
    GtTableInfoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'gt-table-info',
                    template: "<span *ngIf=\"genericTable.gtInfo\">{{(customText? customText:genericTable.gtTexts) | gtTableInfo:\n\t\tgenericTable.gtInfo:\n\t\tgenericTable.gtInfo.recordsAfterSearch:\n\t\tgenericTable.gtInfo.recordFrom:\n\t\tgenericTable.gtInfo.recordTo:\n\t\tgenericTable.gtInfo.recordsAll:\n\t\tgenericTable.gtTexts.loading:\n\t\tgenericTable.gtTexts.tableInfoAfterSearch}}</span>"
                },] },
    ];
    /** @nocollapse */
    GtTableInfoComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef, },
    ]; };
    GtTableInfoComponent.propDecorators = {
        "genericTable": [{ type: Input },],
        "customText": [{ type: Input },],
    };
    return GtTableInfoComponent;
}());
export { GtTableInfoComponent };
function GtTableInfoComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GtTableInfoComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GtTableInfoComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    GtTableInfoComponent.propDecorators;
    /** @type {?} */
    GtTableInfoComponent.prototype.genericTable;
    /** @type {?} */
    GtTableInfoComponent.prototype.customText;
    /** @type {?} */
    GtTableInfoComponent.prototype._changeDetectionRef;
}
import { Pipe } from '@angular/core';
var TableInfoPipe = /** @class */ (function () {
    function TableInfoPipe() {
    }
    /**
     * @param {?} texts
     * @param {?} keys
     * @param {?} recordsAfterSearch
     * @param {?} recordFrom
     * @param {?} recordTo
     * @param {?} recordsAll
     * @param {?} loading
     * @param {?} tableInfoAfterSearch
     * @return {?}
     */
    TableInfoPipe.prototype.transform = /**
     * @param {?} texts
     * @param {?} keys
     * @param {?} recordsAfterSearch
     * @param {?} recordFrom
     * @param {?} recordTo
     * @param {?} recordsAll
     * @param {?} loading
     * @param {?} tableInfoAfterSearch
     * @return {?}
     */
    function (texts, keys, recordsAfterSearch, recordFrom, recordTo, recordsAll, loading, tableInfoAfterSearch) {
        var /** @type {?} */ text = typeof texts === 'object' ? texts.tableInfo : '';
        if (keys.recordsAfterSearch !== keys.recordsAll) {
            text = typeof texts === 'object' ? texts.tableInfoAfterSearch : '';
        }
        for (var /** @type {?} */ key in keys) {
            if (keys.hasOwnProperty(key)) {
                var /** @type {?} */ searchString = new RegExp('#' + key, 'g');
                text = text.replace(searchString, keys[key]);
            }
        }
        return text;
    };
    TableInfoPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'gtTableInfo'
                },] },
    ];
    return TableInfoPipe;
}());
export { TableInfoPipe };
function TableInfoPipe_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    TableInfoPipe.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    TableInfoPipe.ctorParameters;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3QtdGFibGUtaW5mby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1nZW5lcmljLXRhYmxlL2NvcmUvIiwic291cmNlcyI6WyJjb21wb25lbnRzL2d0LXRhYmxlLWluZm8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ04sU0FBUyxFQUNULGlCQUFpQixFQUVqQixLQUFLLEVBQ0wsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7O0lBaUJqRSw4QkFBb0IsbUJBQXNDO1FBQXRDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBbUI7S0FBSTs7OztJQUU5RCxpREFBa0I7OztJQUFsQjtRQUNDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxhQUFhLEVBQUUsQ0FBQztLQUN6Qzs7Z0JBbkJELFNBQVMsU0FBQztvQkFDVixRQUFRLEVBQUUsZUFBZTtvQkFDekIsUUFBUSxFQUFFLG1YQU8wQztpQkFDcEQ7Ozs7Z0JBaEJBLGlCQUFpQjs7O2lDQWtCaEIsS0FBSzsrQkFDTCxLQUFLOzsrQkFyQlA7O1NBbUJhLG9CQUFvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVWpDLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7SUFRbkQsaUNBQVM7Ozs7Ozs7Ozs7O0lBQVQsVUFDQyxLQUF1QixFQUN2QixJQUFtQixFQUNuQixrQkFBMEIsRUFDMUIsVUFBa0IsRUFDbEIsUUFBZ0IsRUFDaEIsVUFBa0IsRUFDbEIsT0FBZSxFQUNmLG9CQUE0QjtRQUU1QixxQkFBSSxJQUFJLEdBQUcsT0FBTyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDNUQsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEtBQUssSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNoRCxJQUFJLEdBQUcsT0FBTyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztTQUNuRTtRQUNELEtBQUsscUJBQU0sR0FBRyxJQUFJLElBQUksRUFBRTtZQUN2QixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQzdCLHFCQUFNLFlBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNoRCxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDN0M7U0FDRDtRQUNELE9BQU8sSUFBSSxDQUFDO0tBQ1o7O2dCQXpCRCxJQUFJLFNBQUM7b0JBQ0wsSUFBSSxFQUFFLGFBQWE7aUJBQ25COzt3QkFuQ0Q7O1NBb0NhLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDb21wb25lbnQsXG5cdENoYW5nZURldGVjdG9yUmVmLFxuXHRBZnRlclZpZXdDaGVja2VkLFxuXHRJbnB1dFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdlbmVyaWNUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vZ2VuZXJpYy10YWJsZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdndC10YWJsZS1pbmZvJyxcblx0dGVtcGxhdGU6IGA8c3BhbiAqbmdJZj1cImdlbmVyaWNUYWJsZS5ndEluZm9cIj57eyhjdXN0b21UZXh0PyBjdXN0b21UZXh0OmdlbmVyaWNUYWJsZS5ndFRleHRzKSB8IGd0VGFibGVJbmZvOlxuXHRcdGdlbmVyaWNUYWJsZS5ndEluZm86XG5cdFx0Z2VuZXJpY1RhYmxlLmd0SW5mby5yZWNvcmRzQWZ0ZXJTZWFyY2g6XG5cdFx0Z2VuZXJpY1RhYmxlLmd0SW5mby5yZWNvcmRGcm9tOlxuXHRcdGdlbmVyaWNUYWJsZS5ndEluZm8ucmVjb3JkVG86XG5cdFx0Z2VuZXJpY1RhYmxlLmd0SW5mby5yZWNvcmRzQWxsOlxuXHRcdGdlbmVyaWNUYWJsZS5ndFRleHRzLmxvYWRpbmc6XG5cdFx0Z2VuZXJpY1RhYmxlLmd0VGV4dHMudGFibGVJbmZvQWZ0ZXJTZWFyY2h9fTwvc3Bhbj5gXG59KVxuZXhwb3J0IGNsYXNzIEd0VGFibGVJbmZvQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3Q2hlY2tlZCB7XG5cdEBJbnB1dCgpIGdlbmVyaWNUYWJsZTogR2VuZXJpY1RhYmxlQ29tcG9uZW50PGFueSwgYW55Pjtcblx0QElucHV0KCkgY3VzdG9tVGV4dDogc3RyaW5nO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgX2NoYW5nZURldGVjdGlvblJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cblx0bmdBZnRlclZpZXdDaGVja2VkKCkge1xuXHRcdHRoaXMuX2NoYW5nZURldGVjdGlvblJlZi5kZXRlY3RDaGFuZ2VzKCk7XG5cdH1cbn1cbmltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEd0SW5mb3JtYXRpb24gfSBmcm9tICcuLi9pbnRlcmZhY2VzL2d0LWluZm9ybWF0aW9uJztcbmltcG9ydCB7IEd0VGV4dHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2d0LXRleHRzJztcblxuQFBpcGUoe1xuXHRuYW1lOiAnZ3RUYWJsZUluZm8nXG59KVxuZXhwb3J0IGNsYXNzIFRhYmxlSW5mb1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0dHJhbnNmb3JtKFxuXHRcdHRleHRzOiBHdFRleHRzIHwgc3RyaW5nLFxuXHRcdGtleXM6IEd0SW5mb3JtYXRpb24sXG5cdFx0cmVjb3Jkc0FmdGVyU2VhcmNoOiBudW1iZXIsXG5cdFx0cmVjb3JkRnJvbTogbnVtYmVyLFxuXHRcdHJlY29yZFRvOiBudW1iZXIsXG5cdFx0cmVjb3Jkc0FsbDogbnVtYmVyLFxuXHRcdGxvYWRpbmc6IHN0cmluZyxcblx0XHR0YWJsZUluZm9BZnRlclNlYXJjaDogc3RyaW5nXG5cdCk6IHN0cmluZyB7XG5cdFx0bGV0IHRleHQgPSB0eXBlb2YgdGV4dHMgPT09ICdvYmplY3QnID8gdGV4dHMudGFibGVJbmZvIDogJyc7XG5cdFx0aWYgKGtleXMucmVjb3Jkc0FmdGVyU2VhcmNoICE9PSBrZXlzLnJlY29yZHNBbGwpIHtcblx0XHRcdHRleHQgPSB0eXBlb2YgdGV4dHMgPT09ICdvYmplY3QnID8gdGV4dHMudGFibGVJbmZvQWZ0ZXJTZWFyY2ggOiAnJztcblx0XHR9XG5cdFx0Zm9yIChjb25zdCBrZXkgaW4ga2V5cykge1xuXHRcdFx0aWYgKGtleXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0XHRjb25zdCBzZWFyY2hTdHJpbmcgPSBuZXcgUmVnRXhwKCcjJyArIGtleSwgJ2cnKTtcblx0XHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZShzZWFyY2hTdHJpbmcsIGtleXNba2V5XSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiB0ZXh0O1xuXHR9XG59XG4iXX0=